{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\002335631\\\\Documents\\\\sar_documents\\\\archive\\\\archive_dashboard\\\\dashboard_frontend\\\\dashboard_frontend\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport GeneralArchiveInfo from '../../components/GeneralArchiveInfo';\nimport myna_run from '../../repositories/myna_run';\nimport radar_run from '../../repositories/radar_run';\nimport listOfMonths from '../../utils/months';\nimport { Container, Content } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [monthSelected, setMonthSelected] = useState(new Date().getMonth() + 1);\n  const [yearSelected, setYearSelected] = useState(new Date().getFullYear());\n  const options = [{\n    value: 'rafa',\n    label: 'rafa'\n  }, {\n    value: 'charlie',\n    label: 'charlie'\n  }];\n  const years = useMemo(() => {\n    let uniqueYears = [];\n    [...myna_run, ...radar_run].forEach(item => {\n      const date = new Date(item.date);\n      const year = date.getFullYear();\n      if (!uniqueYears.includes(year)) {\n        uniqueYears.push(year);\n      }\n      uniqueYears.sort();\n    });\n    return uniqueYears.map(year => {\n      return {\n        value: year,\n        label: year\n      };\n    });\n  }, []);\n  const months = useMemo(() => {\n    return listOfMonths.map((month, index) => {\n      return {\n        value: index + 1,\n        label: month\n      };\n    });\n  }, []);\n  const handleMonthSelected = month => {\n    try {\n      const parseMonth = Number(month);\n      setMonthSelected(parseMonth);\n    } catch {\n      throw new Error('invalid month value. Is accept 0 - 24.');\n    }\n  };\n  const handleYearSelected = year => {\n    try {\n      const parseYear = Number(year);\n      setYearSelected(parseYear);\n    } catch {\n      throw new Error('invalid year value. Is accept integer numbers.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: \"Dahsboard\",\n      lineColor: \"#F7931B\",\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months,\n        onChange: e => setMonthSelected(Number(e.target.value)),\n        defaultValue: monthSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years,\n        onChange: e => setYearSelected(Number(e.target.value)),\n        defaultValue: yearSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(GeneralArchiveInfo, {\n        title: \"Total space on server (in Terabytes):\",\n        amount: \"150.00 TB\",\n        footerlabel: \"Update on 2/5/2024\",\n        color: \"#4E41F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeneralArchiveInfo, {\n        title: \"Total archived this year (in Terabytes):\",\n        amount: \"10.00 TB\",\n        footerlabel: \"Update on 2/5/2024\",\n        color: \"#4E41F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(GeneralArchiveInfo, {\n        title: \"Total created this year(in Terabytes):\",\n        amount: \"15.00 TB\",\n        footerlabel: \"Update on 2/5/2024\",\n        color: \"#4E41F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"sBVqKTnmBm/vRs4zp4XnURDK7jY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useMemo","useState","ContentHeader","SelectInput","GeneralArchiveInfo","myna_run","radar_run","listOfMonths","Container","Content","jsxDEV","_jsxDEV","Dashboard","_s","monthSelected","setMonthSelected","Date","getMonth","yearSelected","setYearSelected","getFullYear","options","value","label","years","uniqueYears","forEach","item","date","year","includes","push","sort","map","months","month","index","handleMonthSelected","parseMonth","Number","Error","handleYearSelected","parseYear","children","title","lineColor","onChange","e","target","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","amount","footerlabel","color","_c","$RefreshReg$"],"sources":["C:/Users/002335631/Documents/sar_documents/archive/archive_dashboard/dashboard_frontend/dashboard_frontend/src/pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\n\r\nimport  ContentHeader  from '../../components/ContentHeader';\r\nimport  SelectInput  from '../../components/SelectInput';\r\nimport GeneralArchiveInfo from '../../components/GeneralArchiveInfo';\r\n\r\nimport myna_run from '../../repositories/myna_run';\r\nimport radar_run from '../../repositories/radar_run';\r\n\r\nimport listOfMonths from '../../utils/months';\r\n\r\nimport { Container,\r\n        Content } from './styles';\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    const [monthSelected, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelected, setYearSelected] = useState<number>(new Date().getFullYear());\r\n   \r\n    const options = [\r\n        {value: 'rafa', label: 'rafa'},\r\n        {value: 'charlie', label: 'charlie',}\r\n    ];\r\n\r\n    const years = useMemo(() => {\r\n        let uniqueYears: number[] = [];\r\n\r\n        [...myna_run, ...radar_run].forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n\r\n            if(!uniqueYears.includes(year)){\r\n                uniqueYears.push(year)\r\n           }\r\n\r\n           uniqueYears.sort();\r\n        });\r\n\r\n        return uniqueYears.map(year => {\r\n            return {\r\n                value: year,\r\n                label: year,\r\n            }\r\n        });\r\n    },[]);\r\n\r\n\r\n    const months = useMemo(() => {\r\n        return listOfMonths.map((month, index) => {\r\n            return {\r\n                value: index + 1,\r\n                label: month,\r\n            }\r\n        });\r\n    },[]);\r\n\r\n\r\n    const handleMonthSelected = (month: string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        }\r\n        catch{\r\n            throw new Error('invalid month value. Is accept 0 - 24.')\r\n        }\r\n    }\r\n\r\n    const handleYearSelected = (year: string) => {\r\n        try {\r\n            const parseYear = Number(year);\r\n            setYearSelected(parseYear);\r\n        }\r\n        catch{\r\n            throw new Error('invalid year value. Is accept integer numbers.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ContentHeader title =\"Dahsboard\" lineColor='#F7931B'>\r\n                <SelectInput \r\n                options= {months} \r\n                onChange= { (e) => setMonthSelected(Number(e.target.value))} \r\n                defaultValue={monthSelected}\r\n                />\r\n                <SelectInput \r\n                options= {years} \r\n                onChange= { (e) => setYearSelected(Number(e.target.value))} \r\n                defaultValue={yearSelected}\r\n                />\r\n            </ContentHeader>\r\n            <Content>\r\n                <GeneralArchiveInfo title=\"Total space on server (in Terabytes):\" \r\n                                    amount= \"150.00 TB\"\r\n                                    footerlabel='Update on 2/5/2024' \r\n                                    color =\"#4E41F0\"/>\r\n                 <GeneralArchiveInfo title=\"Total archived this year (in Terabytes):\" \r\n                                    amount= \"10.00 TB\"\r\n                                    footerlabel='Update on 2/5/2024' \r\n                                    color =\"#4E41F0\"/>\r\n                 <GeneralArchiveInfo title=\"Total created this year(in Terabytes):\" \r\n                                    amount= \"15.00 TB\"\r\n                                    footerlabel='Update on 2/5/2024' \r\n                                    color =\"#4E41F0\"/>\r\n\r\n            </Content>\r\n\r\n        </Container>\r\n    );\r\n    }\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAEhD,OAAQC,aAAa,MAAO,gCAAgC;AAC5D,OAAQC,WAAW,MAAO,8BAA8B;AACxD,OAAOC,kBAAkB,MAAM,qCAAqC;AAEpE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,SAAS,MAAM,8BAA8B;AAEpD,OAAOC,YAAY,MAAM,oBAAoB;AAE7C,SAASC,SAAS,EACVC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAS,IAAIe,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACrF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAS,IAAIe,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;EAElF,MAAMC,OAAO,GAAG,CACZ;IAACC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAACD,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CACxC;EAED,MAAMC,KAAK,GAAGxB,OAAO,CAAC,MAAM;IACxB,IAAIyB,WAAqB,GAAG,EAAE;IAE9B,CAAC,GAAGpB,QAAQ,EAAE,GAAGC,SAAS,CAAC,CAACoB,OAAO,CAACC,IAAI,IAAI;MACxC,MAAMC,IAAI,GAAG,IAAIZ,IAAI,CAACW,IAAI,CAACC,IAAI,CAAC;MAChC,MAAMC,IAAI,GAAGD,IAAI,CAACR,WAAW,CAAC,CAAC;MAE/B,IAAG,CAACK,WAAW,CAACK,QAAQ,CAACD,IAAI,CAAC,EAAC;QAC3BJ,WAAW,CAACM,IAAI,CAACF,IAAI,CAAC;MAC3B;MAEAJ,WAAW,CAACO,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAOP,WAAW,CAACQ,GAAG,CAACJ,IAAI,IAAI;MAC3B,OAAO;QACHP,KAAK,EAAEO,IAAI;QACXN,KAAK,EAAEM;MACX,CAAC;IACL,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMK,MAAM,GAAGlC,OAAO,CAAC,MAAM;IACzB,OAAOO,YAAY,CAAC0B,GAAG,CAAC,CAACE,KAAK,EAAEC,KAAK,KAAK;MACtC,OAAO;QACHd,KAAK,EAAEc,KAAK,GAAG,CAAC;QAChBb,KAAK,EAAEY;MACX,CAAC;IACL,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAGL,MAAME,mBAAmB,GAAIF,KAAa,IAAK;IAC3C,IAAI;MACA,MAAMG,UAAU,GAAGC,MAAM,CAACJ,KAAK,CAAC;MAChCpB,gBAAgB,CAACuB,UAAU,CAAC;IAChC,CAAC,CACD,MAAK;MACD,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;IAC7D;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAIZ,IAAY,IAAK;IACzC,IAAI;MACA,MAAMa,SAAS,GAAGH,MAAM,CAACV,IAAI,CAAC;MAC9BV,eAAe,CAACuB,SAAS,CAAC;IAC9B,CAAC,CACD,MAAK;MACD,MAAM,IAAIF,KAAK,CAAC,gDAAgD,CAAC;IACrE;EACJ,CAAC;EAED,oBACI7B,OAAA,CAACH,SAAS;IAAAmC,QAAA,gBACNhC,OAAA,CAACT,aAAa;MAAC0C,KAAK,EAAE,WAAW;MAACC,SAAS,EAAC,SAAS;MAAAF,QAAA,gBACjDhC,OAAA,CAACR,WAAW;QACZkB,OAAO,EAAGa,MAAO;QACjBY,QAAQ,EAAKC,CAAC,IAAKhC,gBAAgB,CAACwB,MAAM,CAACQ,CAAC,CAACC,MAAM,CAAC1B,KAAK,CAAC,CAAE;QAC5D2B,YAAY,EAAEnC;MAAc;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF1C,OAAA,CAACR,WAAW;QACZkB,OAAO,EAAGG,KAAM;QAChBsB,QAAQ,EAAKC,CAAC,IAAK5B,eAAe,CAACoB,MAAM,CAACQ,CAAC,CAACC,MAAM,CAAC1B,KAAK,CAAC,CAAE;QAC3D2B,YAAY,EAAE/B;MAAa;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAChB1C,OAAA,CAACF,OAAO;MAAAkC,QAAA,gBACJhC,OAAA,CAACP,kBAAkB;QAACwC,KAAK,EAAC,uCAAuC;QAC7CU,MAAM,EAAE,WAAW;QACnBC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrC1C,OAAA,CAACP,kBAAkB;QAACwC,KAAK,EAAC,0CAA0C;QACjDU,MAAM,EAAE,UAAU;QAClBC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrC1C,OAAA,CAACP,kBAAkB;QAACwC,KAAK,EAAC,wCAAwC;QAC/CU,MAAM,EAAE,UAAU;QAClBC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEhB,CAAC;AAAAxC,EAAA,CA/FCD,SAAmB;AAAA6C,EAAA,GAAnB7C,SAAmB;AAgGzB,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}