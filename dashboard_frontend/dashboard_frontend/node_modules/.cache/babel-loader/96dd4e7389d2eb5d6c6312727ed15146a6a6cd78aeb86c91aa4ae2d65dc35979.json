{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\002335631\\\\Documents\\\\sar_documents\\\\archive\\\\archive_dashboard\\\\dashboard_frontend\\\\dashboard_frontend\\\\src\\\\pages\\\\List\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport { useParams } from 'react-router-dom';\nimport SelectInput from '../../components/SelectInput';\nimport MynaMonitoring from '../../components/MynaMonitoring';\nimport cache_switch_run from '../../repositories/cache_switch_run';\nimport myna_run from '../../repositories/myna_run';\nimport { Container, Content, Filters } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    job\n  } = useParams();\n  const title = useMemo(() => {\n    return job === 'entry-myna' ? 'Myna monitoring' : 'Cache switch monitoring';\n  }, [job]);\n  const lineColor = useMemo(() => {\n    return job === 'entry-myna' ? '#F7931B' : '#E44C4E';\n  }, [job]);\n  const listData = useMemo(() => {\n    return job === 'entry-myna' ? myna_run : cache_switch_run;\n  }, [job]);\n  const months = [{\n    value: 7,\n    label: 'Julho'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Setembro'\n  }];\n  const years = [{\n    value: 2018,\n    label: 2018\n  }, {\n    value: 2019,\n    label: 2019\n  }, {\n    value: 2020,\n    label: 2020\n  }];\n  useEffect(() => {\n    const response = listData.map(item => {\n      return {\n        status: item.status,\n        date: item.date,\n        tagColor: \"#4E41F0\"\n      };\n    });\n    setData(response);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: title,\n      lineColor: lineColor,\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        options: months\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        options: years\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `tag-filter\n                    tag-filter-success`,\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `tag-filter\n                    tag-filter-failed`,\n        children: \"Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(MynaMonitoring, {\n        tagColor: \"#E44C4E\",\n        title: \"Run 01\",\n        subtitle: \"10/10/2024\",\n        status: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"0ohOlQPfuQDF/DTZob6hj/QRVjw=\", false, function () {\n  return [useParams];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","ContentHeader","useParams","SelectInput","MynaMonitoring","cache_switch_run","myna_run","Container","Content","Filters","jsxDEV","_jsxDEV","List","_s","data","setData","job","title","lineColor","listData","months","value","label","years","response","map","item","status","date","tagColor","children","options","fileName","_jsxFileName","lineNumber","columnNumber","type","className","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/002335631/Documents/sar_documents/archive/archive_dashboard/dashboard_frontend/dashboard_frontend/src/pages/List/index.tsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\n\r\nimport  ContentHeader  from '../../components/ContentHeader';\r\nimport { useParams } from 'react-router-dom';\r\nimport  SelectInput  from '../../components/SelectInput';\r\nimport MynaMonitoring from '../../components/MynaMonitoring';\r\n\r\nimport cache_switch_run from '../../repositories/cache_switch_run';\r\nimport myna_run from '../../repositories/myna_run';\r\n\r\nimport { Container, Content, Filters } from './styles';\r\n\r\ninterface IRouteParams {\r\n    job: string;\r\n}\r\n\r\ninterface IData {\r\n    status: string;\r\n    date: string;\r\n    tagColor: string;\r\n}\r\n\r\nconst List: React.FC = () => {\r\n\r\n    const [data, setData] = useState<IData[]>([]);\r\n\r\n    const { job } = useParams<keyof IRouteParams>() as IRouteParams;\r\n\r\n    const title = useMemo(() => {\r\n        return  job === 'entry-myna' ? 'Myna monitoring': 'Cache switch monitoring'\r\n    }, [job]);\r\n\r\n    const lineColor = useMemo(() => {\r\n        return  job === 'entry-myna' ? '#F7931B': '#E44C4E'\r\n    }, [job]);\r\n\r\n\r\n   const listData = useMemo(() => {\r\n    return  job === 'entry-myna' ? myna_run: cache_switch_run;\r\n    }, [job]);\r\n\r\n    const months = [\r\n        {value: 7, label: 'Julho'},\r\n        {value: 8, label: 'Agosto'},\r\n        {value: 9, label: 'Setembro'}\r\n    ];\r\n\r\n    const years = [\r\n        {value: 2018, label: 2018},\r\n        {value: 2019, label: 2019},\r\n        {value: 2020, label: 2020}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const  response = listData.map(item => {\r\n            return{\r\n                status: item.status,\r\n                date: item.date,\r\n                tagColor: \"#4E41F0\"\r\n            }\r\n           \r\n        })\r\n        setData(response);\r\n    },[]);\r\n\r\n    return (\r\n        <Container>\r\n        <ContentHeader title ={title} lineColor={lineColor}>\r\n            <SelectInput options= {months} />\r\n            <SelectInput options= {years} />\r\n        </ContentHeader>\r\n\r\n        <Filters>\r\n                <button \r\n                    type=\"button\"\r\n                    className=\r\n                    {`tag-filter\r\n                    tag-filter-success`}\r\n                >\r\n                    Success\r\n                </button>\r\n\r\n                <button \r\n                    type=\"button\"\r\n                    className= \r\n                    {`tag-filter\r\n                    tag-filter-failed`\r\n                    }\r\n                >\r\n                    Failed\r\n                </button>\r\n        </Filters>\r\n        <Content>\r\n            <MynaMonitoring \r\n                tagColor = \"#E44C4E\"\r\n                title = \"Run 01\"\r\n                subtitle = \"10/10/2024\"\r\n                status = \"Success\"\r\n            />\r\n        </Content>\r\n\r\n    </Container>\r\n    );\r\n    }\r\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}